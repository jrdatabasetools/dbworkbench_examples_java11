<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.jr-database-tools.dbworkbench.examples</groupId>
    <artifactId>spring_http_remoting_java11</artifactId>
    <version>25.1.0</version>
  </parent>

  <artifactId>spring_http_remoting_client_java11</artifactId>

  <dependencies>
    <!-- server -->
    <dependency>
      <groupId>com.jr-database-tools.dbworkbench.examples</groupId>
      <artifactId>spring_http_remoting_server_java11</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

    <!-- spring remoting -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Annotation -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.jr-database-tools.dbworkbench</groupId>
        <artifactId>connectorbuilder-maven-plugin</artifactId>
        <configuration>
          <connector_builder_filename>
            ../spring_http_remoting_server_java11/spring_http_remoting_11.spring_bldr</connector_builder_filename>
          <build_target>client</build_target>
          <info>all</info>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <!-- start docker -->
          <execution>
            <id>docker-compose-start</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>
                docker</executable>
              <workingDirectory>${project.basedir}</workingDirectory>
              <arguments>
                <argument>compose</argument>
                <argument>
                  up</argument>
                <argument>-d</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- wait until docker started -->
          <execution>
            <id>wait-until-docker-is-started</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>ping</executable>
              <workingDirectory>${project.basedir}</workingDirectory>
              <arguments>
                <argument>localhost</argument>
                <argument>${ping.count.parameter}</argument>
                <argument>15</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- stop docker -->
          <execution>
            <id>
              docker-compose-stop</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>
                docker</executable>
              <workingDirectory>${project.basedir}</workingDirectory>
              <arguments>
                <argument>compose</argument>
                <argument>
                  down</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
